{"version":3,"file":"static/js/190.bdaa9f8e.chunk.js","mappings":"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","sources":["webpack://redux-test/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://redux-test/./src/components/TaskForm/TaskForm.module.css?c90e","components/TaskForm/TaskForm.js","webpack://redux-test/./src/components/Task/Task.module.css?22e8","components/Task/Task.js","components/Loader/Loader.jsx","redux/todos/todos-selectors.js","webpack://redux-test/./src/components/TaskList/TaskList.module.css?079b","redux/todos/todos-constants.js","components/TaskList/TaskList.js","webpack://redux-test/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","pages/Tasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__Yvwzw\",\"isSelected\":\"Button_isSelected__PLHkq\"};","import clsx from \"clsx\";\r\nimport css from \"./Button.module.css\";\r\n\r\nexport const Button = ({\r\n  selected = false,\r\n  type = \"button\",\r\n  children,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <button\r\n      className={clsx(css.btn, {\r\n        [css.isSelected]: selected,\r\n      })}\r\n      type={type}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskForm_form__WwsIm\",\"field\":\"TaskForm_field__QOcco\",\"buttonSubmit\":\"TaskForm_buttonSubmit__+XgkE\",\"buttonSubmit--icon\":\"TaskForm_buttonSubmit--icon__6G2vT\"};","import { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"redux/todos/todos-operations\";\r\n//\r\nimport { Button } from \"components/Button/Button\";\r\n//\r\nimport css from \"./TaskForm.module.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { BiMessageSquareAdd } from \"react-icons/bi\";\r\n\r\nexport const TaskForm = () => {\r\n  const dispatch = useDispatch();\r\n  //\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    dispatch(addTodo(form.elements.text.value));\r\n    form.reset();\r\n  };\r\n\r\n  return (\r\n    <section className={css.section}>\r\n      <form className={css.form} onSubmit={handleSubmit}>\r\n        <IconContext.Provider\r\n          value={{ size: \"32px\", className: \"buttonSubmit--icon\" }}\r\n        >\r\n          <Button type=\"submit\" className={css.buttonSubmit}>\r\n            <BiMessageSquareAdd />\r\n          </Button>\r\n        </IconContext.Provider>\r\n\r\n        <textarea\r\n          className={css.field}\r\n          rows=\"8\"\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"needs to write some details...\"\r\n        />\r\n      </form>{\" \"}\r\n    </section>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__rBeP3\",\"text\":\"Task_text__J5t8r\",\"checkbox\":\"Task_checkbox__mrb4N\",\"btn\":\"Task_btn__WhKwD\"};","import { useDispatch } from \"react-redux\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { deleteTodo, toggleCompleted } from \"redux/todos/todos-operations\";\r\nimport css from \"./Task.module.css\";\r\n\r\nexport const Task = ({ task }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => dispatch(deleteTodo(task.id));\r\n\r\n  const handleToggle = () => dispatch(toggleCompleted(task));\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className={css.checkbox}\r\n        checked={task.completed}\r\n        onChange={handleToggle}\r\n      />\r\n      <p className={css.text}>{task.text}</p>\r\n      <button className={css.btn} onClick={handleDelete}>\r\n        <MdClose size={24} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { MutatingDots } from \"react-loader-spinner\";\r\nimport React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <MutatingDots\r\n      height=\"100\"\r\n      width=\"100\"\r\n      color=\"#0d0d0d\"\r\n      secondaryColor=\"#000000\"\r\n      radius=\"12\"\r\n      ariaLabel=\"mutating-dots-loading\"\r\n      wrapperStyle={{ margin: \"auto\" }}\r\n      wrapperClass=\"Loader\"\r\n      visible={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const getStatusFilter = (state) => state.filters.status;\r\n\r\nexport const getTasks = (state) => state.todos.items;\r\n\r\nexport const getIsLoading = (state) => state.todos.isLoading;\r\n\r\nexport const getError = (state) => state.todos.error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__H9z0Z\",\"listItem\":\"TaskList_listItem__dHQXs\",\"section\":\"TaskList_section__EHY5p\",\"title\":\"TaskList_title__qSRWE\"};","export const statusFilters = Object.freeze({\r\n  all: \"all\",\r\n  active: \"active\",\r\n  completed: \"completed\",\r\n});\r\n","import { useSelector } from \"react-redux\";\r\nimport { Task } from \"components/Task/Task\";\r\n// import { StatusFilter } from \"components/StatusFilter/StatusFilter\";\r\n// import { TaskCounter } from \"components/TaskCounter/TaskCounter\";\r\nimport Loader from \"components/Loader/Loader\";\r\n\r\nimport {\r\n  getTasks,\r\n  getIsLoading,\r\n  getError,\r\n  getStatusFilter,\r\n} from \"redux/todos/todos-selectors\";\r\nimport css from \"./TaskList.module.css\";\r\nimport { statusFilters } from \"redux/todos/todos-constants\";\r\n\r\nconst getVisibleTasks = (tasks, statusFilter) => {\r\n  switch (statusFilter) {\r\n    case statusFilters.active:\r\n      return tasks.filter((task) => !task.completed);\r\n    case statusFilters.completed:\r\n      return tasks.filter((task) => task.completed);\r\n    default:\r\n      return tasks;\r\n  }\r\n};\r\n\r\nexport const TaskList = () => {\r\n  const tasks = useSelector(getTasks);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const error = useSelector(getError);\r\n\r\n  const statusFilter = useSelector(getStatusFilter);\r\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\r\n  return (\r\n    <section className={css.section}>\r\n      {/* <TaskCounter />\r\n      <h2 className={css.title}>Filter by status</h2>\r\n      <StatusFilter /> */}\r\n      {isLoading && !error && <Loader />}\r\n      {!isLoading && (\r\n        <ul className={css.list}>\r\n          {visibleTasks?.map((task) => (\r\n            <li className={css.listItem} key={task.id}>\r\n              <Task task={task} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionTodo\":\"Section_sectionTodo__ZUq7C\"};","import css from \"./Section.module.css\";\r\n\r\nexport const Section = ({ children }) => {\r\n  return <div className={css.sectionTodo}>{children}</div>;\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\n// import { useContacts } from 'hooks';\r\nimport { useEffect } from \"react\";\r\n\r\n// import Loading from 'components/Loading';\r\nimport { TaskForm } from \"components/TaskForm/TaskForm\";\r\nimport { TaskList } from \"components/TaskList/TaskList\";\r\nimport { Section } from \"components/Section/Section\";\r\nimport { fetchTodos } from \"redux/todos/todos-operations\";\r\n\r\nconst Tasks = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTodos());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Tasks</h2>\r\n      </div>\r\n      <Section>\r\n        <TaskForm />\r\n        <TaskList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"names":["Button","selected","type","children","otherProps","className","clsx","css","TaskForm","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","addTodo","elements","text","value","reset","size","rows","name","placeholder","Task","task","checked","completed","onChange","toggleCompleted","onClick","deleteTodo","id","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","margin","wrapperClass","visible","getStatusFilter","state","filters","status","getTasks","todos","items","getIsLoading","isLoading","getError","error","statusFilters","Object","freeze","all","active","TaskList","tasks","useSelector","visibleTasks","statusFilter","filter","getVisibleTasks","map","Section","useEffect","fetchTodos"],"sourceRoot":""}